from abc import ABC, abstractmethod

# Загальний інтерфейс продукту
class Land(ABC):
    @abstractmethod
    def description(self):
        pass

# Конкретний продукт - Гірська земля
class MountainLand(Land):
    def description(self):
        return "Гірська земля"

# Конкретний продукт - Лісова земля
class ForestLand(Land):
    def description(self):
        return "Лісова земля"

# Конкретний продукт - Рівнинна земля
class PlainLand(Land):
    def description(self):
        return "Рівнинна земля"

# Загальний інтерфейс творця
class LandCreator(ABC):
    @abstractmethod
    def create_land(self) -> Land:
        pass

# Конкретний творець - Гірська земля
class MountainLandCreator(LandCreator):
    def create_land(self) -> Land:
        return MountainLand()

# Конкретний творець - Лісова земля
class ForestLandCreator(LandCreator):
    def create_land(self) -> Land:
        return ForestLand()

# Конкретний творець - Рівнинна земля
class PlainLandCreator(LandCreator):
    def create_land(self) -> Land:
        return PlainLand()

# Клієнтський код
def client_code(land_creator: LandCreator) -> None:
    land = land_creator.create_land()
    print(f"Створено: {land.description()}")

# Приклад використання
if __name__ == "__main__":
    print("Створення гірської землі:")
    client_code(MountainLandCreator())

    print("\nСтворення лісової землі:")
    client_code(ForestLandCreator())

    print("\nСтворення рівнинної землі:")
    client_code(PlainLandCreator())
